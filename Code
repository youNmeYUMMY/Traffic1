#include <LiquidCrystal.h>

LiquidCrystal lcd_up(1, 2, 4, 5, 6, 7);
LiquidCrystal lcd_right(14, 30, 22, 24, 26, 28);
LiquidCrystal lcd_down(16, 40, 32, 34, 36, 38);

int opt = 0;

char state_1 = 'r';
char state_2 = 'y';
char state_3 = 'g';

const int trigPinDown = 8;
const int echoPinDown = 9;
const int trigPinUp = 10;
const int echoPinUp = 11;
const int trigPinRight = 12;
const int echoPinRight = 13;
int countdown = 1;
bool isCounting = false; // Flag to indicate if countdown is active

long duration;
int distanceCmUp, distanceCmDown, distanceCmRight;

void setup() {
  lcd_up.begin(16, 2);
  lcd_right.begin(16, 2);
  lcd_down.begin(16, 2);
  pinMode(trigPinDown, OUTPUT);
  pinMode(echoPinDown, INPUT);
  pinMode(trigPinUp, OUTPUT);
  pinMode(echoPinUp, INPUT);
  pinMode(trigPinRight, OUTPUT);
  pinMode(echoPinRight, INPUT);
}

void loop() {
  if (state_1 == 'r') {
    opt = 1;
    state_1 = 'g';
    state_2 = 'r';
    state_3 = 'y';
  } else if (state_1 == 'g') {
    opt = 2;
    state_1 = 'y';
    state_2 = 'g';
    state_3 = 'r';
  } else if (state_1 == 'y') {
    opt = 3;
    state_1 = 'r';
    state_2 = 'y';
    state_3 = 'g';
  }

  digitalWrite(trigPinUp, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPinUp, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPinUp, LOW);
  duration = pulseIn(echoPinUp, HIGH);
  distanceCmUp = duration * 0.034 / 2;

  digitalWrite(trigPinRight, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPinRight, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPinRight, LOW);
  duration = pulseIn(echoPinRight, HIGH);
  distanceCmRight = duration * 0.034 / 2;

  digitalWrite(trigPinDown, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPinDown, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPinDown, LOW);
  duration = pulseIn(echoPinDown, HIGH);
  distanceCmDown = duration * 0.034 / 2;

  if (distanceCmDown >= 200 && state_3 == 'g') {
    countdown = 2;
    isCounting = true;
  } else if (distanceCmDown < 200 && distanceCmDown >= 100) {
    countdown = 4;
    isCounting = true;
  } else if (distanceCmDown < 100 && distanceCmDown >= 50) {
    countdown = 6;
    isCounting = true;
  } else if (distanceCmDown < 50 && distanceCmDown >= 25) {
    countdown = 8;
    isCounting = true;
  } else if (distanceCmDown <= 25) {
    countdown = 10;
    isCounting = true;
  }

  if (distanceCmUp >= 200 && state_2 == 'g') {
    countdown = 2;
    isCounting = true;
  } else if (distanceCmUp < 200 && distanceCmUp >= 100) {
    countdown = 4;
    isCounting = true;
  } else if (distanceCmUp < 100 && distanceCmUp >= 50) {
    countdown = 6;
    isCounting = true;
  } else if (distanceCmUp < 50 && distanceCmUp >= 25) {
    countdown = 8;
    isCounting = true;
  } else if (distanceCmUp <= 25) {
    countdown = 10;
    isCounting = true;
  }

  if (distanceCmRight >= 200 && state_1 == 'g') {
    countdown = 2;
    isCounting = true;
  } else if (distanceCmRight < 200 && distanceCmRight >= 100) {
    countdown = 4;
    isCounting = true;
  } else if (distanceCmRight < 100 && distanceCmRight >= 50) {
    countdown = 6;
    isCounting = true;
  } else if (distanceCmRight < 50 && distanceCmRight >= 25) {
    countdown = 8;
    isCounting = true;
  } else if (distanceCmRight <= 25) {
    countdown = 10;
    isCounting = true;
  }

  while (countdown != 0) {
    lcd_up.clear();
    lcd_up.setCursor(0, 0);
    lcd_right.clear();
    lcd_right.setCursor(0, 0);
    lcd_down.clear();
    lcd_down.setCursor(0, 0);

    if (opt == 1) {
      lcd_up.print("YELLOW");
      lcd_right.print("GREEN");
      lcd_down.print("RED");
    } else if (opt == 2) {
      lcd_up.print("GREEN");
      lcd_right.print("RED");
      lcd_down.print("YELLOW");
    } else if (opt == 3) {
      lcd_up.print("RED");
      lcd_right.print("YELLOW");
      lcd_down.print("GREEN");
    }

    lcd_up.setCursor(0, 1);
    lcd_right.setCursor(0, 1);
    lcd_down.setCursor(0, 1);
    lcd_up.print("Countdown: ");
    lcd_right.print("Countdown: ");
    lcd_down.print("Countdown: ");
    lcd_up.print(countdown);
    lcd_right.print(countdown);
    lcd_down.print(countdown);

    countdown--;
    delay(1000);
  }
}
